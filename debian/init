#!/bin/sh
### BEGIN INIT INFO
# Provides:          rabbitmq-server-parsec
# Required-Start:    $remote_fs $network
# Required-Stop:     $remote_fs $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       RabbitMQ broker
# Short-Description: Enable AMQP service provided by RabbitMQ broker
### END INIT INFO

# Â© Laboratory 50 <team@lab50.net>

PATH=/sbin:/usr/sbin:/bin:/usr/bin
NAME=rabbitmq-server-parsec
DAEMON=/usr/sbin/${NAME}
CONTROL=/usr/sbin/rabbitmqctl
DESC="message broker"
USER=rabbitmq
AMQP_PORT=5672
ROTATE_SUFFIX=
DATADIR=/var/lib/rabbitmq
LOGDIR=/var/log/rabbitmq
PIDFILE=/var/run/rabbitmq/pid
EPMD=/usr/bin/epmd
EPMD_PIDFILE=/var/run/epmd.pid
SYSMAXLBL="3:0:0"

test -x $DAEMON || exit 0
test -x $CONTROL || exit 0

RETVAL=0

[ -f /etc/default/rabbitmq-server ] && . /etc/default/rabbitmq-server

. /lib/lsb/init-functions
. /lib/init/vars.sh

SCRIPTNAME=$(basename $0)
MACLVL=${SCRIPTNAME##*:}
if [ -n "$MACLVL" -a $MACLVL -eq $MACLVL 2> /dev/null ]; then
    PIDFILE="${PIDFILE}${MACLVL}"
    AMQP_PORT=$(( ${AMQP_PORT} + ${MACLVL} ))
else
    MACLVL=0
fi

MAC=${MACLVL}:0:0
LOGDIR=${LOGDIR}/${MACLVL}
DATADIR=${DATADIR}/${MACLVL}
CONTROL="start-stop-parsec-daemon --chuid ${USER} --start -M ${MAC} --exec ${CONTROL}"

if [ $MACLVL -ne 0 ]; then
    HOSTNAME=$(hostname)
    export RABBITMQ_NODENAME=rabbit${MACLVL}@${HOSTNAME%%.*}
fi

export RABBITMQ_LOG_BASE=$LOGDIR
export RABBITMQ_MNESIA_BASE=$DATADIR/mnesia
export RABBITMQ_PID_FILE=$PIDFILE
export RABBITMQ_NODE_PORT=$AMQP_PORT
export RABBITMQ_NODE_IP_ADDRESS=0.0.0.0
export RABBITMQ_CTL_ERL_ARGS="-start_epmd false"

make_dirs () {
    if [ ! -d ${LOGDIR} ]; then
        mkdir -p ${LOGDIR}
        chown -R ${USER}:adm ${LOGDIR}
        pdpl-file $MAC ${LOGDIR}
    fi

    if [ ! -d ${DATADIR} ]; then
        mkdir -p ${DATADIR}
        chown -R ${USER}:${USER} ${DATADIR}
        pdpl-file -R $MAC ${DATADIR}
    fi
}

ensure_pid_dir () {
    PID_DIR=$(dirname ${PIDFILE})
    if [ ! -d ${PID_DIR} ] ; then
        mkdir -p ${PID_DIR}
        chmod 755 ${PID_DIR}
        chown -R ${USER}:${USER} ${PID_DIR}
        pdpl-file "${SYSMAXLBL}:ALL" ${PID_DIR}
    fi
}

remove_pid () {
    rm -f ${PIDFILE}
}

start_epmd () {
    if pidofproc -p "$EPMD_PIDFILE" "$EPMD" >/dev/null; then
        RETVAL=0
    else
        start-stop-parsec-daemon --quiet --chuid $USER --start --exec $EPMD \
            --make-pidfile --pidfile "$EPMD_PIDFILE" --background --capability 0x100
        RETVAL=$?
    fi
}

start_rabbitmq () {
    status_rabbitmq quiet
    if [ $RETVAL != 0 ] ; then
        RETVAL=0
        ensure_pid_dir
        make_dirs
        start-stop-parsec-daemon --quiet \
            --chuid $USER --chdir $DATADIR --start --exec $DAEMON \
            --pidfile $PIDFILE -M $MAC --background -- start
        RETVAL=$?
        if [ $RETVAL != 0 ] ; then
            remove_pid
        fi
    else
        RETVAL=3
    fi
}

stop_rabbitmq () {
    status_rabbitmq quiet
    if [ $RETVAL = 0 ] ; then
        start-stop-parsec-daemon --quiet \
            --chuid $USER --start --exec $DAEMON -M $MAC -- stop
        RETVAL=$?
        if [ $RETVAL = 0 ] ; then
            remove_pid
        fi
    else
        RETVAL=3
    fi
}

status_rabbitmq() {
    if [ "$1" != "quiet" ] ; then
        $CONTROL status 2>&1
    else
        $CONTROL status > /dev/null 2>&1
    fi
    if [ $? != 0 ] ; then
        RETVAL=3
    fi
}

rotate_logs_rabbitmq() {
    $CONTROL -q rotate_logs ${ROTATE_SUFFIX} > /dev/null
    if [ $? != 0 ] ; then
        RETVAL=1
    fi
}

restart_running_rabbitmq () {
    status_rabbitmq quiet
    if [ $RETVAL = 0 ] ; then
        restart_rabbitmq
    else
        log_warning_msg "${DESC} not running"
    fi
}

restart_rabbitmq() {
    stop_rabbitmq
    start_epmd
    start_rabbitmq
}

restart_end() {
    if [ $RETVAL = 0 ] ; then
        log_end_msg 0
    else
        log_end_msg 1
    fi
}

start_stop_end() {
    case "$RETVAL" in
        0)
            [ -x /sbin/initctl ] && /sbin/initctl emit --no-wait "${NAME}-${1}"
            log_end_msg 0
            ;;
        3)
            log_warning_msg "${DESC} already ${1}"
            log_end_msg 0
            RETVAL=0
            ;;
        *)
            log_warning_msg "FAILED - check ${LOGDIR}/startup_\{log, _err\}"
            log_end_msg 1
            ;;
    esac
}

case "$1" in
    start)
        log_daemon_msg "Starting Erlang Port Mapper Daemon" epmd
        start_epmd
        start_stop_end "running"

        log_daemon_msg "Starting ${DESC} (${MACLVL})" $NAME
        start_rabbitmq
        start_stop_end "running"
        ;;
    stop)
        log_daemon_msg "Stopping ${DESC} (${MACLVL})" $NAME
        stop_rabbitmq
        start_stop_end "stopped"
        ;;
    status)
        start_epmd
        status_rabbitmq
        ;;
    rotate-logs)
        start_epmd
        log_action_begin_msg "Rotating log files for ${DESC} ${NAME}"
        rotate_logs_rabbitmq
        log_action_end_msg $RETVAL
        ;;
    force-reload|reload|restart)
        start_epmd
        log_daemon_msg "Restarting ${DESC}" $NAME
        restart_rabbitmq
        restart_end
        ;;
    try-restart)
        start_epmd
        log_daemon_msg "Restarting ${DESC}" $NAME
        restart_running_rabbitmq
        restart_end
        ;;
    *)
        echo "Usage: $0 {start|stop|status|rotate-logs|restart|try-restart|reload}" >&2
        RETVAL=1
        ;;
esac

exit $RETVAL
